{"version":3,"file":"popup.js","sources":["../../../src/services/SyncService.js","../../../src/popup/components/AuthSection.jsx","../../../src/popup/components/StatsSection.jsx","../../../src/popup/components/PokemonCollection.jsx","../../../src/popup/components/SyncIndicator.jsx","../../../src/popup/PopupApp.jsx","../../../src/popup/main.jsx"],"sourcesContent":["import { Utils } from '../utils/Utils.js';\r\nimport { StorageService } from './StorageService.js';\r\n\r\n/**\r\n * Service for handling data synchronization between local storage and the cloud.\r\n */\r\nexport class SyncService {\r\n    /**\r\n     * @param {AppState} appState - The application state.\r\n     */\r\n    constructor(appState) {\r\n        this.state = appState;\r\n        this.syncInProgress = false;\r\n    }\r\n\r\n    /**\r\n     * Performs an immediate synchronization.\r\n     * @param {Array} collection - The Pokémon collection to sync.\r\n     * @returns {Promise<Object>} - The result of the sync operation.\r\n     */\r\n    async immediateSync(collection) {\r\n        if (!this.state.canSync()) return;\r\n        return await this.syncToCloud(collection);\r\n    }\r\n\r\n    /**\r\n     * Synchronizes the local collection to the cloud.\r\n     * @param {Array} collection - The Pokémon collection to sync.\r\n     * @returns {Promise<Object>} - The result of the sync operation.\r\n     */\r\n    async syncToCloud(collection) {\r\n        if (!this.state.canSync() || !collection.length) return;\r\n        if (this.syncInProgress) return;\r\n\r\n        this.syncInProgress = true;\r\n\r\n        try {\r\n            console.log('🔄 Starting sync to cloud for', collection.length, 'Pokemon');\r\n            \r\n            const { data: existingPokemon, error } = await this.state.supabase\r\n                .from('pokemon')\r\n                .select('pokemon_id, site_caught, caught_at')\r\n                .eq('user_id', this.state.currentUser.id);\r\n            if (error) throw error;\r\n\r\n            const existingKeys = new Set(existingPokemon?.map(p => `${p.pokemon_id}|${p.site_caught}|${new Date(p.caught_at).getTime()}`));\r\n            const newPokemon = collection.filter(p => !existingKeys.has(`${p.id}|${p.site}|${new Date(p.caughtAt).getTime()}`));\r\n\r\n            if (newPokemon.length > 0) {\r\n                console.log('📤 Syncing', newPokemon.length, 'new Pokemon to cloud');\r\n                \r\n                const pokemonToInsert = newPokemon.map(p => ({\r\n                    user_id: this.state.currentUser.id,\r\n                    pokemon_id: p.id,\r\n                    name: p.name,\r\n                    species: p.species || p.name,\r\n                    level: p.level,\r\n                    shiny: p.shiny || false,\r\n                    site_caught: p.site,\r\n                    caught_at: p.caughtAt\r\n                }));\r\n\r\n                const { error: insertError } = await this.state.supabase.from('pokemon').insert(pokemonToInsert);\r\n                if (insertError) throw insertError;\r\n\r\n                // Also sync to pokemon_history table\r\n                const uniquePokemonIds = [...new Set(newPokemon.map(p => p.id))];\r\n                const historyRecords = uniquePokemonIds.map(pokemonId => ({\r\n                    user_id: this.state.currentUser.id,\r\n                    pokemon_id: pokemonId\r\n                }));\r\n\r\n                const { error: historyError } = await this.state.supabase\r\n                    .from('pokemon_history')\r\n                    .upsert(historyRecords, {\r\n                        onConflict: 'user_id,pokemon_id'\r\n                    });\r\n\r\n                if (historyError) {\r\n                    console.error('❌ Error syncing to pokemon_history:', historyError);\r\n                    // Don't fail the entire sync if history fails\r\n                }\r\n\r\n                console.log('✅ Successfully synced Pokemon and history to cloud');\r\n                return { synced: newPokemon.length, message: `Synced ${newPokemon.length} new Pokémon` };\r\n            } else {\r\n                console.log('✅ All Pokemon already synced');\r\n                return { synced: 0, message: 'All Pokémon already synced' };\r\n            }\r\n        } catch (error) {\r\n            console.error('Sync to cloud error:', error);\r\n            throw error;\r\n        } finally {\r\n            this.syncInProgress = false;\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nconst AuthSection = ({ user, syncStatus, onLogin, onLogout }) => {\r\n  return (\r\n    <div className=\"auth-section card\">\r\n      {!user ? (\r\n        <div id=\"logged-out-state\">\r\n          <h3>CLOUD STORAGE</h3>\r\n          <p>Log in to collect candies and sync your collection across devices!</p>\r\n          <button \r\n            className=\"btn secondary\" \r\n            onClick={onLogin}\r\n            aria-label=\"Login or sign up\"\r\n          >\r\n            LOGIN\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div id=\"logged-in-state\">\r\n          <div className=\"user-info\" aria-live=\"polite\">\r\n            Trainer: {user.email}\r\n          </div>\r\n          <div className={`sync-status ${syncStatus.type}`} aria-live=\"polite\">\r\n            {syncStatus.message}\r\n          </div>\r\n          <button \r\n            className=\"btn\" \r\n            onClick={onLogout}\r\n            aria-label=\"Logout\"\r\n          >\r\n            LOGOUT\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthSection;\r\n","import React from 'react';\r\n\r\nconst StatsSection = ({ stats }) => {\r\n  return (\r\n    <div className=\"stats-section\">\r\n      <div className=\"stats card\">\r\n        <div className=\"stat\">\r\n          <span className=\"stat-number\">\r\n            {String(stats.totalCaught).padStart(3, '0')}\r\n          </span>\r\n          <span className=\"stat-label\">Caught</span>\r\n        </div>\r\n        <div className=\"stat\">\r\n          <span className=\"stat-number\">\r\n            {String(stats.uniquePokemon).padStart(3, '0')}\r\n          </span>\r\n          <span className=\"stat-label\">Species</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatsSection;\r\n","import React from 'react';\r\nimport { CONFIG } from '../../shared/config.js';\r\nimport { Utils } from '../../utils/Utils.js';\r\n\r\nconst PokemonCollection = ({ collection, onPokemonClick }) => {\r\n  if (collection.length === 0) {\r\n    return (\r\n      <div className=\"collection card\" role=\"list\" aria-label=\"Pokemon collection\">\r\n        <div className=\"empty-state\">\r\n          <h3>POKEDEX EMPTY</h3>\r\n          <p>Scan web pages to detect wild Pokémon and begin data collection...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Sort collection by most recent catches first\r\n  const sortedCollection = [...collection].sort((a, b) => \r\n    new Date(b.caughtAt) - new Date(a.caughtAt)\r\n  );\r\n\r\n  return (\r\n    <div className=\"collection card\" role=\"list\" aria-label=\"Pokemon collection\">\r\n      {sortedCollection.map((pokemon, index) => (\r\n        <div \r\n          key={`${pokemon.id}-${pokemon.caughtAt}-${index}`}\r\n          className=\"pokemon-item clickable-pokemon\"\r\n          onClick={() => onPokemonClick(pokemon)}\r\n          style={{ cursor: 'pointer' }}\r\n        >\r\n          <div className=\"pokemon-sprite\">\r\n            <img \r\n              src={`${CONFIG.SPRITE_BASE_URL}/${pokemon.shiny ? 'shiny/' : ''}${pokemon.id}.png`}\r\n              alt={pokemon.name}\r\n              onError={(e) => { e.target.style.display = 'none'; }}\r\n            />\r\n          </div>\r\n          <div className=\"pokemon-info\">\r\n            <div className=\"pokemon-name\">{pokemon.name}</div>\r\n            <div className=\"pokemon-details\">\r\n              {pokemon.level && `Lv.${pokemon.level}`}\r\n              {pokemon.level && pokemon.types?.length && ' • '}\r\n              {pokemon.types?.join('/') || ''}\r\n              <br />\r\n              Caught on {pokemon.site} • {Utils.formatDate(pokemon.caughtAt)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonCollection;\r\n","import React from 'react';\r\n\r\nconst SyncIndicator = () => {\r\n  const indicatorStyle = {\r\n    position: 'fixed',\r\n    top: '10px',\r\n    right: '10px',\r\n    background: 'rgba(0,0,0,0.8)',\r\n    color: 'white',\r\n    padding: '5px 10px',\r\n    borderRadius: '15px',\r\n    fontSize: '12px',\r\n    zIndex: 10000,\r\n    animation: 'pulse 1s infinite'\r\n  };\r\n\r\n  return (\r\n    <div style={indicatorStyle}>\r\n      🔄\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SyncIndicator;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { AppState } from '../utils/AppState.js';\r\nimport { AuthService } from '../services/AuthService.js';\r\nimport { SyncService } from '../services/SyncService.js';\r\nimport { PokemonService } from '../services/PokemonService.js';\r\nimport { StorageService } from '../services/StorageService.js';\r\nimport { CONFIG } from '../shared/config.js';\r\nimport { Utils } from '../utils/Utils.js';\r\n\r\nimport AuthSection from './components/AuthSection.jsx';\r\nimport StatsSection from './components/StatsSection.jsx';\r\nimport PokemonCollection from './components/PokemonCollection.jsx';\r\nimport SyncIndicator from './components/SyncIndicator.jsx';\r\n\r\nconst PopupApp = ({ appState }) => {\r\n  // State management\r\n  const [isInitialized, setIsInitialized] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [collection, setCollection] = useState([]);\r\n  const [syncStatus, setSyncStatus] = useState({ message: 'Local storage only', type: 'local' });\r\n  const [showSyncIndicator, setShowSyncIndicator] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Services (initialized once)\r\n  const [services] = useState(() => {\r\n    const auth = new AuthService(appState);\r\n    const sync = new SyncService(appState);\r\n    const pokemon = new PokemonService(appState);\r\n    appState.auth = auth;\r\n    appState.sync = sync;\r\n    appState.pokemon = pokemon;\r\n    return { state: appState, auth, sync, pokemon };\r\n  });\r\n\r\n  // Update sync status helper\r\n  const updateSyncStatus = useCallback((message, type = 'local') => {\r\n    console.log(`Sync status: ${message} (${type})`);\r\n    setSyncStatus({ message, type });\r\n    setShowSyncIndicator(type === 'syncing');\r\n  }, []);\r\n\r\n  // Load collection from storage\r\n  const loadCollection = useCallback(async () => {\r\n    try {\r\n      const pokemonCollection = await StorageService.getPokemonCollection();\r\n      setCollection(pokemonCollection);\r\n    } catch (error) {\r\n      console.error('Error loading collection:', error);\r\n    }\r\n  }, []);\r\n\r\n  // Fetch collection from Supabase\r\n  const fetchCloudCollection = useCallback(async (user) => {\r\n    if (!user) return;\r\n    try {\r\n      const { data, error } = await services.state.supabase\r\n        .from('pokemon')\r\n        .select('*')\r\n        .eq('user_id', user.id);\r\n      if (error) throw error;\r\n      setCollection(data.map(p => ({\r\n        id: p.pokemon_id,\r\n        name: p.name,\r\n        species: p.species,\r\n        level: p.level,\r\n        shiny: p.shiny,\r\n        site: p.site_caught,\r\n        caughtAt: p.caught_at\r\n      })));\r\n    } catch (error) {\r\n      console.error('Error fetching cloud collection:', error);\r\n    }\r\n  }, [services.state]);\r\n\r\n  // Handle login\r\n  const handleLogin = useCallback(async () => {\r\n    try {\r\n      console.log('🔄 Starting login process...');\r\n      const authUser = await services.auth.openAuthPopup();\r\n      if (authUser) {\r\n        setUser(authUser);\r\n        updateSyncStatus('Syncing local data to cloud...', 'syncing');\r\n        \r\n        // First, sync local collection to cloud\r\n        const localCollection = await StorageService.getPokemonCollection();\r\n        if (localCollection.length > 0) {\r\n          console.log(`📤 Syncing ${localCollection.length} local Pokemon to cloud...`);\r\n          await services.sync.immediateSync(localCollection);\r\n        }\r\n        \r\n        // Sync local history to cloud\r\n        try {\r\n          await services.pokemon.initializeServices();\r\n          if (services.pokemon.historyService) {\r\n            await services.pokemon.historyService.syncLocalHistory();\r\n          }\r\n        } catch (historyError) {\r\n          console.error('Error syncing local history:', historyError);\r\n          // Don't fail login if history sync fails\r\n        }\r\n        \r\n        // COMPLETELY clear local storage - we're now in cloud mode\r\n        await chrome.storage.local.set({ \r\n          pokemonCollection: [],\r\n          pokemonHistory: []\r\n        });\r\n        console.log('✅ Local storage cleared - now using cloud data only');\r\n        \r\n        // Fetch and display cloud collection\r\n        await fetchCloudCollection(authUser);\r\n        updateSyncStatus('Connected to cloud', 'synced');\r\n        console.log('✅ Login complete - switched to cloud mode');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      updateSyncStatus('Login failed', 'error');\r\n    }\r\n  }, [services.auth, services.sync, services.pokemon, fetchCloudCollection, updateSyncStatus]);\r\n\r\n  // Handle logout\r\n  const handleLogout = useCallback(async () => {\r\n    try {\r\n      console.log('🔄 Starting logout process...');\r\n      updateSyncStatus('Signing out...', 'syncing');\r\n      \r\n      // Clear the current collection display immediately\r\n      setCollection([]);\r\n      \r\n      // Handle logout (clears Supabase session and app state)\r\n      await services.auth.handleLogout();\r\n      setUser(null);\r\n      \r\n      // Load local collection for offline mode\r\n      await loadCollection();\r\n      updateSyncStatus('Local storage only', 'local');\r\n      console.log('✅ Logout complete - switched to local mode');\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n      updateSyncStatus('Error signing out', 'error');\r\n    }\r\n  }, [services.auth, loadCollection, updateSyncStatus]);\r\n\r\n  // Initialize Supabase\r\n  const initializeSupabase = useCallback(async () => {\r\n    try {\r\n      await services.auth.initializeSupabase();\r\n      console.log('Supabase initialized successfully');\r\n    } catch (error) {\r\n      console.warn('Supabase initialization failed:', error);\r\n      updateSyncStatus(error.message, 'error');\r\n    }\r\n  }, [services.auth, updateSyncStatus]);\r\n\r\n  // Initialize authentication\r\n  const initializeAuth = useCallback(async () => {\r\n    if (!services.state.supabase) return;\r\n\r\n    try {\r\n      const currentUser = await services.auth.initializeAuth();\r\n      \r\n      if (currentUser) {\r\n        setUser(currentUser);\r\n        updateSyncStatus('Connected to cloud', 'synced');\r\n        await fetchCloudCollection(currentUser);\r\n      } else {\r\n        await loadCollection();\r\n        updateSyncStatus('Local storage only', 'local');\r\n      }\r\n\r\n      // Setup auth state listener\r\n      services.auth.setupAuthStateListener(async (event, authUser) => {\r\n        if (event === 'SIGNED_IN') {\r\n          console.log('🔄 Auth listener: User signed in');\r\n          setUser(authUser);\r\n          updateSyncStatus('Syncing local data to cloud...', 'syncing');\r\n          \r\n          // Sync local collection to cloud\r\n          const localCollection = await StorageService.getPokemonCollection();\r\n          if (localCollection.length > 0) {\r\n            console.log(`📤 Auth listener: Syncing ${localCollection.length} local Pokemon to cloud...`);\r\n            await services.sync.immediateSync(localCollection);\r\n          }\r\n          \r\n          // Sync local history to cloud\r\n          try {\r\n            await services.pokemon.initializeServices();\r\n            if (services.pokemon.historyService) {\r\n              await services.pokemon.historyService.syncLocalHistory();\r\n            }\r\n          } catch (historyError) {\r\n            console.error('Error syncing local history:', historyError);\r\n            // Don't fail login if history sync fails\r\n          }\r\n          \r\n          // COMPLETELY clear local storage - we're now in cloud mode\r\n          await chrome.storage.local.set({ \r\n            pokemonCollection: [],\r\n            pokemonHistory: []\r\n          });\r\n          console.log('✅ Auth listener: Local storage cleared - now using cloud data only');\r\n          \r\n          await fetchCloudCollection(authUser);\r\n          updateSyncStatus('Connected to cloud', 'synced');\r\n          console.log('✅ Auth listener: Login complete - switched to cloud mode');\r\n        } else if (event === 'SIGNED_OUT') {\r\n          console.log('🔄 Auth listener: User signed out - switching to local mode');\r\n          setUser(null);\r\n          await loadCollection();\r\n          updateSyncStatus('Local storage only', 'local');\r\n          console.log('✅ Auth listener: Logout complete - switched to local mode');\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('Auth initialization error:', error);\r\n      updateSyncStatus('Auth system offline', 'error');\r\n    }\r\n  }, [services.auth, services.state, fetchCloudCollection, loadCollection, updateSyncStatus, services.sync]);\r\n\r\n  // Handle view Pokedex\r\n  const handleViewPokedex = useCallback(() => {\r\n    if (services.state.currentUser) {\r\n      chrome.tabs.create({ url: chrome.runtime.getURL('dist/src/pokedex/index.html') });\r\n    } else {\r\n      alert('Please log in to view the Pokedex.');\r\n    }\r\n  }, [services.state.currentUser]);\r\n\r\n  // Handle Pokemon click\r\n  const handlePokemonClick = useCallback((pokemon) => {\r\n    services.pokemon.openPokemonDetail(pokemon);\r\n  }, [services.pokemon]);\r\n\r\n  // Initialize app\r\n  useEffect(() => {\r\n    const initialize = async () => {\r\n      if (isInitialized) return;\r\n\r\n      try {\r\n        await initializeSupabase();\r\n        await initializeAuth();\r\n        setIsInitialized(true);\r\n      } catch (error) {\r\n        console.error('Error initializing app:', error);\r\n        updateSyncStatus('Local storage only', 'local');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    initialize();\r\n  }, [isInitialized, initializeSupabase, initializeAuth, updateSyncStatus]);\r\n\r\n  // Listen for collection updates from background script\r\n  useEffect(() => {\r\n    const handleMessage = (message, sender, sendResponse) => {\r\n      if (message.type === 'COLLECTION_UPDATED') {\r\n        console.log('🔄 Popup: Received collection update notification from:', message.data?.source || 'unknown');\r\n        console.log('🔄 Popup: Pokemon caught:', message.data?.pokemon?.name || 'unknown');\r\n        \r\n        // Refresh the collection based on current user state\r\n        if (user) {\r\n          console.log('🔄 Refreshing cloud collection...');\r\n          fetchCloudCollection(user);\r\n        } else {\r\n          console.log('🔄 Refreshing local collection...');\r\n          loadCollection();\r\n        }\r\n        \r\n        sendResponse({ success: true });\r\n      }\r\n    };\r\n\r\n    // Add message listener\r\n    chrome.runtime.onMessage.addListener(handleMessage);\r\n\r\n    // Cleanup listener on unmount\r\n    return () => {\r\n      chrome.runtime.onMessage.removeListener(handleMessage);\r\n    };\r\n  }, [user, fetchCloudCollection, loadCollection]);\r\n\r\n  // Add storage listener as fallback for local storage changes\r\n  useEffect(() => {\r\n    if (!user) { // Only listen for storage changes when not logged in\r\n      const handleStorageChange = (changes, areaName) => {\r\n        if (areaName === 'local' && changes.pokemonCollection) {\r\n          console.log('🔄 Popup: Local storage changed, refreshing collection...');\r\n          loadCollection();\r\n        }\r\n      };\r\n\r\n      chrome.storage.onChanged.addListener(handleStorageChange);\r\n\r\n      return () => {\r\n        chrome.storage.onChanged.removeListener(handleStorageChange);\r\n      };\r\n    }\r\n  }, [user, loadCollection]);\r\n\r\n  // Calculate stats\r\n  const stats = {\r\n    totalCaught: collection.length,\r\n    uniquePokemon: new Set(collection.map(p => p.id)).size\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"popup-loading\">\r\n        <div className=\"top-section\">\r\n          <div className=\"indicators\">\r\n            <div className=\"indicator red\"></div>\r\n            <div className=\"indicator yellow\"></div>\r\n            <div className=\"indicator green\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"header\">\r\n          <h1>POKÉBROWSER</h1>\r\n        </div>\r\n        <div style={{ textAlign: 'center', padding: '20px' }}>\r\n          Loading...\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {showSyncIndicator && <SyncIndicator />}\r\n      \r\n      <div className=\"top-section\">\r\n        <div className=\"indicators\">\r\n          <div className=\"indicator red\"></div>\r\n          <div className=\"indicator yellow\"></div>\r\n          <div className=\"indicator green\"></div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"header\">\r\n        <h1>POKÉBROWSER</h1>\r\n      </div>\r\n      \r\n      <StatsSection stats={stats} />\r\n      \r\n      <div className=\"section-title\">\r\n        <h2>Recent Catches</h2>\r\n      </div>\r\n      \r\n      <PokemonCollection \r\n        collection={collection}\r\n        onPokemonClick={handlePokemonClick}\r\n      />\r\n      \r\n      <div className=\"action-section\">\r\n        <button \r\n          className=\"btn secondary\" \r\n          onClick={handleViewPokedex}\r\n          aria-label=\"View full Pokédex\"\r\n        >\r\n          VIEW POKÉDEX\r\n        </button>\r\n      </div>\r\n      \r\n      <AuthSection\r\n        user={user}\r\n        syncStatus={syncStatus}\r\n        onLogin={handleLogin}\r\n        onLogout={handleLogout}\r\n      />\r\n      \r\n      <div className=\"bottom-section\"></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PopupApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport PopupApp from './PopupApp.jsx';\r\nimport { AppState } from '../utils/AppState.js';\r\n\r\nconst appState = new AppState();\r\n\r\nReactDOM.createRoot(document.getElementById('popup-root')).render(\r\n  <React.StrictMode>\r\n    <PopupApp appState={appState} />\r\n  </React.StrictMode>\r\n);\r\n"],"names":["appState","jsx","jsxs","useState","useCallback","user","useEffect","Fragment","ReactDOM"],"mappings":";;;;;AAMO,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA,EAIrB,YAAYA,WAAU;AAClB,SAAK,QAAQA;AACb,SAAK,iBAAiB;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,cAAc,YAAY;AAC5B,QAAI,CAAC,KAAK,MAAM,QAAO,EAAI;AAC3B,WAAO,MAAM,KAAK,YAAY,UAAU;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,YAAY,YAAY;AAC1B,QAAI,CAAC,KAAK,MAAM,QAAO,KAAM,CAAC,WAAW,OAAQ;AACjD,QAAI,KAAK,eAAgB;AAEzB,SAAK,iBAAiB;AAEtB,QAAI;AACA,cAAQ,IAAI,iCAAiC,WAAW,QAAQ,SAAS;AAEzE,YAAM,EAAE,MAAM,iBAAiB,MAAK,IAAK,MAAM,KAAK,MAAM,SACrD,KAAK,SAAS,EACd,OAAO,oCAAoC,EAC3C,GAAG,WAAW,KAAK,MAAM,YAAY,EAAE;AAC5C,UAAI,MAAO,OAAM;AAEjB,YAAM,eAAe,IAAI,IAAI,mDAAiB,IAAI,OAAK,GAAG,EAAE,UAAU,IAAI,EAAE,WAAW,IAAI,IAAI,KAAK,EAAE,SAAS,EAAE,QAAO,CAAE,GAAG;AAC7H,YAAM,aAAa,WAAW,OAAO,OAAK,CAAC,aAAa,IAAI,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,IAAI,IAAI,KAAK,EAAE,QAAQ,EAAE,QAAO,CAAE,EAAE,CAAC;AAElH,UAAI,WAAW,SAAS,GAAG;AACvB,gBAAQ,IAAI,cAAc,WAAW,QAAQ,sBAAsB;AAEnE,cAAM,kBAAkB,WAAW,IAAI,QAAM;AAAA,UACzC,SAAS,KAAK,MAAM,YAAY;AAAA,UAChC,YAAY,EAAE;AAAA,UACd,MAAM,EAAE;AAAA,UACR,SAAS,EAAE,WAAW,EAAE;AAAA,UACxB,OAAO,EAAE;AAAA,UACT,OAAO,EAAE,SAAS;AAAA,UAClB,aAAa,EAAE;AAAA,UACf,WAAW,EAAE;AAAA,QACjC,EAAkB;AAEF,cAAM,EAAE,OAAO,YAAW,IAAK,MAAM,KAAK,MAAM,SAAS,KAAK,SAAS,EAAE,OAAO,eAAe;AAC/F,YAAI,YAAa,OAAM;AAGvB,cAAM,mBAAmB,CAAC,GAAG,IAAI,IAAI,WAAW,IAAI,OAAK,EAAE,EAAE,CAAC,CAAC;AAC/D,cAAM,iBAAiB,iBAAiB,IAAI,gBAAc;AAAA,UACtD,SAAS,KAAK,MAAM,YAAY;AAAA,UAChC,YAAY;AAAA,QAChC,EAAkB;AAEF,cAAM,EAAE,OAAO,aAAY,IAAK,MAAM,KAAK,MAAM,SAC5C,KAAK,iBAAiB,EACtB,OAAO,gBAAgB;AAAA,UACpB,YAAY;AAAA,QACpC,CAAqB;AAEL,YAAI,cAAc;AACd,kBAAQ,MAAM,uCAAuC,YAAY;AAAA,QAErE;AAEA,gBAAQ,IAAI,oDAAoD;AAChE,eAAO,EAAE,QAAQ,WAAW,QAAQ,SAAS,UAAU,WAAW,MAAM;MAC5E,OAAO;AACH,gBAAQ,IAAI,8BAA8B;AAC1C,eAAO,EAAE,QAAQ,GAAG,SAAS,6BAA4B;AAAA,MAC7D;AAAA,IACJ,SAAS,OAAO;AACZ,cAAQ,MAAM,wBAAwB,KAAK;AAC3C,YAAM;AAAA,IACV,UAAC;AACG,WAAK,iBAAiB;AAAA,IAC1B;AAAA,EACJ;AACJ;AC9FA,MAAM,cAAc,CAAC,EAAE,MAAM,YAAY,SAAS,eAAe;AAC/D,SACEC,kCAAAA,IAAC,SAAI,WAAU,qBACZ,WAAC,OACAC,kCAAAA,KAAC,OAAA,EAAI,IAAG,oBACN,UAAA;AAAA,IAAAD,kCAAAA,IAAC,QAAG,UAAA,gBAAA,CAAa;AAAA,IACjBA,kCAAAA,IAAC,OAAE,UAAA,qEAAA,CAAkE;AAAA,IACrEA,kCAAAA;AAAAA,MAAC;AAAA,MAAA;AAAA,QACC,WAAU;AAAA,QACV,SAAS;AAAA,QACT,cAAW;AAAA,QACZ,UAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAED,EAAA,CACF,IAEAC,kCAAAA,KAAC,OAAA,EAAI,IAAG,mBACN,UAAA;AAAA,IAAAA,kCAAAA,KAAC,OAAA,EAAI,WAAU,aAAY,aAAU,UAAS,UAAA;AAAA,MAAA;AAAA,MAClC,KAAK;AAAA,IAAA,GACjB;AAAA,IACAD,kCAAAA,IAAC,OAAA,EAAI,WAAW,eAAe,WAAW,IAAI,IAAI,aAAU,UACzD,UAAA,WAAW,QAAA,CACd;AAAA,IACAA,kCAAAA;AAAAA,MAAC;AAAA,MAAA;AAAA,QACC,WAAU;AAAA,QACV,SAAS;AAAA,QACT,cAAW;AAAA,QACZ,UAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAED,EAAA,CACF,EAAA,CAEJ;AAEJ;AClCA,MAAM,eAAe,CAAC,EAAE,YAAY;AAClC,+CACG,OAAA,EAAI,WAAU,iBACb,UAAAC,kCAAAA,KAAC,OAAA,EAAI,WAAU,cACb,UAAA;AAAA,IAAAA,kCAAAA,KAAC,OAAA,EAAI,WAAU,QACb,UAAA;AAAA,MAAAD,kCAAAA,IAAC,QAAA,EAAK,WAAU,eACb,UAAA,OAAO,MAAM,WAAW,EAAE,SAAS,GAAG,GAAG,EAAA,CAC5C;AAAA,MACAA,kCAAAA,IAAC,QAAA,EAAK,WAAU,cAAa,UAAA,SAAA,CAAM;AAAA,IAAA,GACrC;AAAA,IACAC,kCAAAA,KAAC,OAAA,EAAI,WAAU,QACb,UAAA;AAAA,MAAAD,kCAAAA,IAAC,QAAA,EAAK,WAAU,eACb,UAAA,OAAO,MAAM,aAAa,EAAE,SAAS,GAAG,GAAG,EAAA,CAC9C;AAAA,MACAA,kCAAAA,IAAC,QAAA,EAAK,WAAU,cAAa,UAAA,UAAA,CAAO;AAAA,IAAA,EAAA,CACtC;AAAA,EAAA,EAAA,CACF,EAAA,CACF;AAEJ;ACjBA,MAAM,oBAAoB,CAAC,EAAE,YAAY,qBAAqB;AAC5D,MAAI,WAAW,WAAW,GAAG;AAC3B,WACEA,kCAAAA,IAAC,OAAA,EAAI,WAAU,mBAAkB,MAAK,QAAO,cAAW,sBACtD,UAAAC,kCAAAA,KAAC,OAAA,EAAI,WAAU,eACb,UAAA;AAAA,MAAAD,kCAAAA,IAAC,QAAG,UAAA,gBAAA,CAAa;AAAA,MACjBA,kCAAAA,IAAC,OAAE,UAAA,qEAAA,CAAkE;AAAA,IAAA,EAAA,CACvE,EAAA,CACF;AAAA,EAEJ;AAGA,QAAM,mBAAmB,CAAC,GAAG,UAAU,EAAE;AAAA,IAAK,CAAC,GAAG,MAChD,IAAI,KAAK,EAAE,QAAQ,IAAI,IAAI,KAAK,EAAE,QAAQ;AAAA,EAAA;AAG5C,SACEA,kCAAAA,IAAC,OAAA,EAAI,WAAU,mBAAkB,MAAK,QAAO,cAAW,sBACrD,UAAA,iBAAiB,IAAI,CAAC,SAAS;;AAC9BC,6CAAAA;AAAAA,MAAC;AAAA,MAAA;AAAA,QAEC,WAAU;AAAA,QACV,SAAS,MAAM,eAAe,OAAO;AAAA,QACrC,OAAO,EAAE,QAAQ,UAAA;AAAA,QAEjB,UAAA;AAAA,UAAAD,kCAAAA,IAAC,OAAA,EAAI,WAAU,kBACb,UAAAA,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,KAAK,GAAG,OAAO,eAAe,IAAI,QAAQ,QAAQ,WAAW,EAAE,GAAG,QAAQ,EAAE;AAAA,cAC5E,KAAK,QAAQ;AAAA,cACb,SAAS,CAAC,MAAM;AAAE,kBAAE,OAAO,MAAM,UAAU;AAAA,cAAQ;AAAA,YAAA;AAAA,UAAA,GAEvD;AAAA,UACAC,kCAAAA,KAAC,OAAA,EAAI,WAAU,gBACb,UAAA;AAAA,YAAAD,kCAAAA,IAAC,OAAA,EAAI,WAAU,gBAAgB,UAAA,QAAQ,MAAK;AAAA,YAC5CC,kCAAAA,KAAC,OAAA,EAAI,WAAU,mBACZ,UAAA;AAAA,cAAA,QAAQ,SAAS,MAAM,QAAQ,KAAK;AAAA,cACpC,QAAQ,WAAS,aAAQ,UAAR,mBAAe,WAAU;AAAA,gBAC1C,aAAQ,UAAR,mBAAe,KAAK,SAAQ;AAAA,oDAC5B,MAAA,EAAG;AAAA,cAAE;AAAA,cACK,QAAQ;AAAA,cAAK;AAAA,cAAI,MAAM,WAAW,QAAQ,QAAQ;AAAA,YAAA,EAAA,CAC/D;AAAA,UAAA,EAAA,CACF;AAAA,QAAA;AAAA,MAAA;AAAA,MArBK,GAAG,QAAQ,EAAE,IAAI,QAAQ,QAAQ,IAAI,KAAK;AAAA,IAAA;AAAA,GAuBlD,GACH;AAEJ;ACjDA,MAAM,gBAAgB,MAAM;AAC1B,QAAM,iBAAiB;AAAA,IACrB,UAAU;AAAA,IACV,KAAK;AAAA,IACL,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,OAAO;AAAA,IACP,SAAS;AAAA,IACT,cAAc;AAAA,IACd,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,WAAW;AAAA,EAAA;AAGb,SACED,kCAAAA,IAAC,OAAA,EAAI,OAAO,gBAAgB,UAAA,MAE5B;AAEJ;ACPA,MAAM,WAAW,CAAC,EAAE,UAAAD,gBAAe;AAEjC,QAAM,CAAC,eAAe,gBAAgB,IAAIG,aAAAA,SAAS,KAAK;AACxD,QAAM,CAAC,MAAM,OAAO,IAAIA,aAAAA,SAAS,IAAI;AACrC,QAAM,CAAC,YAAY,aAAa,IAAIA,aAAAA,SAAS,CAAA,CAAE;AAC/C,QAAM,CAAC,YAAY,aAAa,IAAIA,aAAAA,SAAS,EAAE,SAAS,sBAAsB,MAAM,SAAS;AAC7F,QAAM,CAAC,mBAAmB,oBAAoB,IAAIA,aAAAA,SAAS,KAAK;AAChE,QAAM,CAAC,WAAW,YAAY,IAAIA,aAAAA,SAAS,IAAI;AAG/C,QAAM,CAAC,QAAQ,IAAIA,aAAAA,SAAS,MAAM;AAChC,UAAM,OAAO,IAAI,YAAYH,SAAQ;AACrC,UAAM,OAAO,IAAI,YAAYA,SAAQ;AACrC,UAAM,UAAU,IAAI,eAAeA,SAAQ;AAC3C,IAAAA,UAAS,OAAO;AAChB,IAAAA,UAAS,OAAO;AAChB,IAAAA,UAAS,UAAU;AACnB,WAAO,EAAE,OAAOA,WAAU,MAAM,MAAM,QAAA;AAAA,EACxC,CAAC;AAGD,QAAM,mBAAmBI,aAAAA,YAAY,CAAC,SAAS,OAAO,YAAY;AAChE,YAAQ,IAAI,gBAAgB,OAAO,KAAK,IAAI,GAAG;AAC/C,kBAAc,EAAE,SAAS,MAAM;AAC/B,yBAAqB,SAAS,SAAS;AAAA,EACzC,GAAG,CAAA,CAAE;AAGL,QAAM,iBAAiBA,aAAAA,YAAY,YAAY;AAC7C,QAAI;AACF,YAAM,oBAAoB,MAAM,eAAe,qBAAA;AAC/C,oBAAc,iBAAiB;AAAA,IACjC,SAAS,OAAO;AACd,cAAQ,MAAM,6BAA6B,KAAK;AAAA,IAClD;AAAA,EACF,GAAG,CAAA,CAAE;AAGL,QAAM,uBAAuBA,yBAAY,OAAOC,UAAS;AACvD,QAAI,CAACA,MAAM;AACX,QAAI;AACF,YAAM,EAAE,MAAM,MAAA,IAAU,MAAM,SAAS,MAAM,SAC1C,KAAK,SAAS,EACd,OAAO,GAAG,EACV,GAAG,WAAWA,MAAK,EAAE;AACxB,UAAI,MAAO,OAAM;AACjB,oBAAc,KAAK,IAAI,CAAA,OAAM;AAAA,QAC3B,IAAI,EAAE;AAAA,QACN,MAAM,EAAE;AAAA,QACR,SAAS,EAAE;AAAA,QACX,OAAO,EAAE;AAAA,QACT,OAAO,EAAE;AAAA,QACT,MAAM,EAAE;AAAA,QACR,UAAU,EAAE;AAAA,MAAA,EACZ,CAAC;AAAA,IACL,SAAS,OAAO;AACd,cAAQ,MAAM,oCAAoC,KAAK;AAAA,IACzD;AAAA,EACF,GAAG,CAAC,SAAS,KAAK,CAAC;AAGnB,QAAM,cAAcD,aAAAA,YAAY,YAAY;AAC1C,QAAI;AACF,cAAQ,IAAI,8BAA8B;AAC1C,YAAM,WAAW,MAAM,SAAS,KAAK,cAAA;AACrC,UAAI,UAAU;AACZ,gBAAQ,QAAQ;AAChB,yBAAiB,kCAAkC,SAAS;AAG5D,cAAM,kBAAkB,MAAM,eAAe,qBAAA;AAC7C,YAAI,gBAAgB,SAAS,GAAG;AAC9B,kBAAQ,IAAI,cAAc,gBAAgB,MAAM,4BAA4B;AAC5E,gBAAM,SAAS,KAAK,cAAc,eAAe;AAAA,QACnD;AAGA,YAAI;AACF,gBAAM,SAAS,QAAQ,mBAAA;AACvB,cAAI,SAAS,QAAQ,gBAAgB;AACnC,kBAAM,SAAS,QAAQ,eAAe,iBAAA;AAAA,UACxC;AAAA,QACF,SAAS,cAAc;AACrB,kBAAQ,MAAM,gCAAgC,YAAY;AAAA,QAE5D;AAGA,cAAM,OAAO,QAAQ,MAAM,IAAI;AAAA,UAC7B,mBAAmB,CAAA;AAAA,UACnB,gBAAgB,CAAA;AAAA,QAAC,CAClB;AACD,gBAAQ,IAAI,qDAAqD;AAGjE,cAAM,qBAAqB,QAAQ;AACnC,yBAAiB,sBAAsB,QAAQ;AAC/C,gBAAQ,IAAI,2CAA2C;AAAA,MACzD;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,gBAAgB,KAAK;AACnC,uBAAiB,gBAAgB,OAAO;AAAA,IAC1C;AAAA,EACF,GAAG,CAAC,SAAS,MAAM,SAAS,MAAM,SAAS,SAAS,sBAAsB,gBAAgB,CAAC;AAG3F,QAAM,eAAeA,aAAAA,YAAY,YAAY;AAC3C,QAAI;AACF,cAAQ,IAAI,+BAA+B;AAC3C,uBAAiB,kBAAkB,SAAS;AAG5C,oBAAc,CAAA,CAAE;AAGhB,YAAM,SAAS,KAAK,aAAA;AACpB,cAAQ,IAAI;AAGZ,YAAM,eAAA;AACN,uBAAiB,sBAAsB,OAAO;AAC9C,cAAQ,IAAI,4CAA4C;AAAA,IAC1D,SAAS,OAAO;AACd,cAAQ,MAAM,iBAAiB,KAAK;AACpC,uBAAiB,qBAAqB,OAAO;AAAA,IAC/C;AAAA,EACF,GAAG,CAAC,SAAS,MAAM,gBAAgB,gBAAgB,CAAC;AAGpD,QAAM,qBAAqBA,aAAAA,YAAY,YAAY;AACjD,QAAI;AACF,YAAM,SAAS,KAAK,mBAAA;AACpB,cAAQ,IAAI,mCAAmC;AAAA,IACjD,SAAS,OAAO;AACd,cAAQ,KAAK,mCAAmC,KAAK;AACrD,uBAAiB,MAAM,SAAS,OAAO;AAAA,IACzC;AAAA,EACF,GAAG,CAAC,SAAS,MAAM,gBAAgB,CAAC;AAGpC,QAAM,iBAAiBA,aAAAA,YAAY,YAAY;AAC7C,QAAI,CAAC,SAAS,MAAM,SAAU;AAE9B,QAAI;AACF,YAAM,cAAc,MAAM,SAAS,KAAK,eAAA;AAExC,UAAI,aAAa;AACf,gBAAQ,WAAW;AACnB,yBAAiB,sBAAsB,QAAQ;AAC/C,cAAM,qBAAqB,WAAW;AAAA,MACxC,OAAO;AACL,cAAM,eAAA;AACN,yBAAiB,sBAAsB,OAAO;AAAA,MAChD;AAGA,eAAS,KAAK,uBAAuB,OAAO,OAAO,aAAa;AAC9D,YAAI,UAAU,aAAa;AACzB,kBAAQ,IAAI,kCAAkC;AAC9C,kBAAQ,QAAQ;AAChB,2BAAiB,kCAAkC,SAAS;AAG5D,gBAAM,kBAAkB,MAAM,eAAe,qBAAA;AAC7C,cAAI,gBAAgB,SAAS,GAAG;AAC9B,oBAAQ,IAAI,6BAA6B,gBAAgB,MAAM,4BAA4B;AAC3F,kBAAM,SAAS,KAAK,cAAc,eAAe;AAAA,UACnD;AAGA,cAAI;AACF,kBAAM,SAAS,QAAQ,mBAAA;AACvB,gBAAI,SAAS,QAAQ,gBAAgB;AACnC,oBAAM,SAAS,QAAQ,eAAe,iBAAA;AAAA,YACxC;AAAA,UACF,SAAS,cAAc;AACrB,oBAAQ,MAAM,gCAAgC,YAAY;AAAA,UAE5D;AAGA,gBAAM,OAAO,QAAQ,MAAM,IAAI;AAAA,YAC7B,mBAAmB,CAAA;AAAA,YACnB,gBAAgB,CAAA;AAAA,UAAC,CAClB;AACD,kBAAQ,IAAI,oEAAoE;AAEhF,gBAAM,qBAAqB,QAAQ;AACnC,2BAAiB,sBAAsB,QAAQ;AAC/C,kBAAQ,IAAI,0DAA0D;AAAA,QACxE,WAAW,UAAU,cAAc;AACjC,kBAAQ,IAAI,6DAA6D;AACzE,kBAAQ,IAAI;AACZ,gBAAM,eAAA;AACN,2BAAiB,sBAAsB,OAAO;AAC9C,kBAAQ,IAAI,2DAA2D;AAAA,QACzE;AAAA,MACF,CAAC;AAAA,IACH,SAAS,OAAO;AACd,cAAQ,MAAM,8BAA8B,KAAK;AACjD,uBAAiB,uBAAuB,OAAO;AAAA,IACjD;AAAA,EACF,GAAG,CAAC,SAAS,MAAM,SAAS,OAAO,sBAAsB,gBAAgB,kBAAkB,SAAS,IAAI,CAAC;AAGzG,QAAM,oBAAoBA,aAAAA,YAAY,MAAM;AAC1C,QAAI,SAAS,MAAM,aAAa;AAC9B,aAAO,KAAK,OAAO,EAAE,KAAK,OAAO,QAAQ,OAAO,6BAA6B,GAAG;AAAA,IAClF,OAAO;AACL,YAAM,oCAAoC;AAAA,IAC5C;AAAA,EACF,GAAG,CAAC,SAAS,MAAM,WAAW,CAAC;AAG/B,QAAM,qBAAqBA,yBAAY,CAAC,YAAY;AAClD,aAAS,QAAQ,kBAAkB,OAAO;AAAA,EAC5C,GAAG,CAAC,SAAS,OAAO,CAAC;AAGrBE,eAAAA,UAAU,MAAM;AACd,UAAM,aAAa,YAAY;AAC7B,UAAI,cAAe;AAEnB,UAAI;AACF,cAAM,mBAAA;AACN,cAAM,eAAA;AACN,yBAAiB,IAAI;AAAA,MACvB,SAAS,OAAO;AACd,gBAAQ,MAAM,2BAA2B,KAAK;AAC9C,yBAAiB,sBAAsB,OAAO;AAAA,MAChD,UAAA;AACE,qBAAa,KAAK;AAAA,MACpB;AAAA,IACF;AAEA,eAAA;AAAA,EACF,GAAG,CAAC,eAAe,oBAAoB,gBAAgB,gBAAgB,CAAC;AAGxEA,eAAAA,UAAU,MAAM;AACd,UAAM,gBAAgB,CAAC,SAAS,QAAQ,iBAAiB;;AACvD,UAAI,QAAQ,SAAS,sBAAsB;AACzC,gBAAQ,IAAI,6DAA2D,aAAQ,SAAR,mBAAc,WAAU,SAAS;AACxG,gBAAQ,IAAI,+BAA6B,mBAAQ,SAAR,mBAAc,YAAd,mBAAuB,SAAQ,SAAS;AAGjF,YAAI,MAAM;AACR,kBAAQ,IAAI,mCAAmC;AAC/C,+BAAqB,IAAI;AAAA,QAC3B,OAAO;AACL,kBAAQ,IAAI,mCAAmC;AAC/C,yBAAA;AAAA,QACF;AAEA,qBAAa,EAAE,SAAS,MAAM;AAAA,MAChC;AAAA,IACF;AAGA,WAAO,QAAQ,UAAU,YAAY,aAAa;AAGlD,WAAO,MAAM;AACX,aAAO,QAAQ,UAAU,eAAe,aAAa;AAAA,IACvD;AAAA,EACF,GAAG,CAAC,MAAM,sBAAsB,cAAc,CAAC;AAG/CA,eAAAA,UAAU,MAAM;AACd,QAAI,CAAC,MAAM;AACT,YAAM,sBAAsB,CAAC,SAAS,aAAa;AACjD,YAAI,aAAa,WAAW,QAAQ,mBAAmB;AACrD,kBAAQ,IAAI,2DAA2D;AACvE,yBAAA;AAAA,QACF;AAAA,MACF;AAEA,aAAO,QAAQ,UAAU,YAAY,mBAAmB;AAExD,aAAO,MAAM;AACX,eAAO,QAAQ,UAAU,eAAe,mBAAmB;AAAA,MAC7D;AAAA,IACF;AAAA,EACF,GAAG,CAAC,MAAM,cAAc,CAAC;AAGzB,QAAM,QAAQ;AAAA,IACZ,aAAa,WAAW;AAAA,IACxB,eAAe,IAAI,IAAI,WAAW,IAAI,CAAA,MAAK,EAAE,EAAE,CAAC,EAAE;AAAA,EAAA;AAGpD,MAAI,WAAW;AACb,WACEJ,kCAAAA,KAAC,OAAA,EAAI,WAAU,iBACb,UAAA;AAAA,MAAAD,kCAAAA,IAAC,SAAI,WAAU,eACb,UAAAC,kCAAAA,KAAC,OAAA,EAAI,WAAU,cACb,UAAA;AAAA,QAAAD,kCAAAA,IAAC,OAAA,EAAI,WAAU,gBAAA,CAAgB;AAAA,QAC/BA,kCAAAA,IAAC,OAAA,EAAI,WAAU,mBAAA,CAAmB;AAAA,QAClCA,kCAAAA,IAAC,OAAA,EAAI,WAAU,kBAAA,CAAkB;AAAA,MAAA,EAAA,CACnC,EAAA,CACF;AAAA,4CACC,OAAA,EAAI,WAAU,UACb,UAAAA,sCAAC,MAAA,EAAG,yBAAW,EAAA,CACjB;AAAA,MACAA,kCAAAA,IAAC,SAAI,OAAO,EAAE,WAAW,UAAU,SAAS,OAAA,GAAU,UAAA,aAAA,CAEtD;AAAA,IAAA,GACF;AAAA,EAEJ;AAEA,SACEC,kCAAAA,KAAAK,4BAAA,EACG,UAAA;AAAA,IAAA,2DAAsB,eAAA,EAAc;AAAA,0CAEpC,OAAA,EAAI,WAAU,eACb,UAAAL,kCAAAA,KAAC,OAAA,EAAI,WAAU,cACb,UAAA;AAAA,MAAAD,kCAAAA,IAAC,OAAA,EAAI,WAAU,gBAAA,CAAgB;AAAA,MAC/BA,kCAAAA,IAAC,OAAA,EAAI,WAAU,mBAAA,CAAmB;AAAA,MAClCA,kCAAAA,IAAC,OAAA,EAAI,WAAU,kBAAA,CAAkB;AAAA,IAAA,EAAA,CACnC,EAAA,CACF;AAAA,0CAEC,OAAA,EAAI,WAAU,UACb,UAAAA,sCAAC,MAAA,EAAG,yBAAW,EAAA,CACjB;AAAA,IAEAA,sCAAC,gBAAa,OAAc;AAAA,0CAE3B,OAAA,EAAI,WAAU,iBACb,UAAAA,sCAAC,MAAA,EAAG,4BAAc,EAAA,CACpB;AAAA,IAEAA,kCAAAA;AAAAA,MAAC;AAAA,MAAA;AAAA,QACC;AAAA,QACA,gBAAgB;AAAA,MAAA;AAAA,IAAA;AAAA,IAGlBA,kCAAAA,IAAC,OAAA,EAAI,WAAU,kBACb,UAAAA,kCAAAA;AAAAA,MAAC;AAAA,MAAA;AAAA,QACC,WAAU;AAAA,QACV,SAAS;AAAA,QACT,cAAW;AAAA,QACZ,UAAA;AAAA,MAAA;AAAA,IAAA,GAGH;AAAA,IAEAA,kCAAAA;AAAAA,MAAC;AAAA,MAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA,SAAS;AAAA,QACT,UAAU;AAAA,MAAA;AAAA,IAAA;AAAA,IAGZA,kCAAAA,IAAC,OAAA,EAAI,WAAU,iBAAA,CAAiB;AAAA,EAAA,GAClC;AAEJ;AC/WA,MAAM,WAAW,IAAI,SAAA;AAErBO,OAAS,WAAW,SAAS,eAAe,YAAY,CAAC,EAAE;AAAA,wCACxD,MAAM,YAAN,EACC,UAAAP,kCAAAA,IAAC,UAAA,EAAS,UAAoB,EAAA,CAChC;AACF;"}