{"version":3,"file":"auth.js","sources":["../../../src/auth/AuthApp.jsx","../../../src/auth/main.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { AppState } from '../utils/AppState.js';\r\nimport { AuthService } from '../services/AuthService.js';\r\nimport { CONFIG } from '../shared/config.js';\r\n\r\nconst AuthApp = () => {\r\n  // State management\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('error');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isInitialized, setIsInitialized] = useState(false);\r\n\r\n  // Services (initialized once)\r\n  const [services] = useState(() => {\r\n    const state = new AppState();\r\n    return {\r\n      state,\r\n      auth: new AuthService(state)\r\n    };\r\n  });\r\n\r\n  // Show message helper\r\n  const showMessage = (text, type = 'error') => {\r\n    setMessage(text);\r\n    setMessageType(type);\r\n    setTimeout(() => setMessage(''), 5000);\r\n  };\r\n\r\n  // Get user-friendly error message\r\n  const getErrorMessage = (error) => {\r\n    if (error.message.includes('Invalid login credentials')) return 'Invalid email or password';\r\n    if (error.message.includes('User already registered')) return 'An account with this email already exists';\r\n    if (error.message.includes('Email not confirmed')) return 'Please check your email and click the confirmation link';\r\n    return error.message || 'Authentication failed';\r\n  };\r\n\r\n  // Toggle between sign-in and sign-up modes\r\n  const toggleAuthMode = () => {\r\n    setIsSignUp(!isSignUp);\r\n    setEmail('');\r\n    setPassword('');\r\n    setMessage('');\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!email || !password) {\r\n      return showMessage('Please fill in all fields', 'error');\r\n    }\r\n    if (password.length < 6) {\r\n      return showMessage('Password must be at least 6 characters', 'error');\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      const { data, error } = isSignUp \r\n        ? await services.state.supabase.auth.signUp({ email, password })\r\n        : await services.state.supabase.auth.signInWithPassword({ email, password });\r\n\r\n      if (error) throw error;\r\n\r\n      if (isSignUp) {\r\n        showMessage(data.session ? 'Account created successfully!' : 'Please check your email for verification link', 'success');\r\n      } else if (data.session) {\r\n        showMessage('Signed in successfully!', 'success');\r\n      }\r\n      \r\n      if (data.session) {\r\n        setTimeout(() => window.close(), 1500);\r\n      }\r\n    } catch (error) {\r\n      console.error('Auth error:', error);\r\n      const errorMessage = getErrorMessage(error);\r\n      showMessage(errorMessage, 'error');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Initialize Supabase and check existing session\r\n  useEffect(() => {\r\n    const initialize = async () => {\r\n      try {\r\n        await services.auth.initializeSupabase();\r\n        \r\n        // Check if user is already signed in\r\n        const { data: { session } } = await services.state.supabase.auth.getSession();\r\n        if (session) {\r\n          showMessage('Already signed in!', 'success');\r\n          setTimeout(() => window.close(), 1000);\r\n        }\r\n        \r\n        setIsInitialized(true);\r\n      } catch (error) {\r\n        console.error('Initialization error:', error);\r\n        showMessage('Authentication system not available', 'error');\r\n        setIsInitialized(true);\r\n      }\r\n    };\r\n\r\n    initialize();\r\n  }, [services.auth, services.state]);\r\n\r\n  if (!isInitialized) {\r\n    return (\r\n      <div className=\"auth-container\">\r\n        <div className=\"header\">\r\n          <h1>POKÉBROWSER</h1>\r\n          <p>Trainer Authentication System</p>\r\n        </div>\r\n        <div style={{ textAlign: 'center', padding: '20px' }}>\r\n          Loading...\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <h1>POKÉBROWSER</h1>\r\n        <p>Trainer Authentication System</p>\r\n      </div>\r\n      \r\n      <div className=\"auth-container\">\r\n        <form className=\"auth-form\" onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Trainer Email</label>\r\n            <input \r\n              type=\"email\" \r\n              id=\"email\" \r\n              placeholder=\"trainer@pokemon.com\" \r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input \r\n              type=\"password\" \r\n              id=\"password\" \r\n              placeholder=\"Enter your password\" \r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <button \r\n            type=\"submit\" \r\n            className=\"btn\" \r\n            disabled={isLoading}\r\n          >\r\n            {isSignUp ? 'Sign Up' : 'Sign In'}\r\n          </button>\r\n          \r\n          {message && (\r\n            <div id=\"message\">\r\n              <div className={`message ${messageType}`}>{message}</div>\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"toggle-section\">\r\n            <span>{isSignUp ? 'Already have an account?' : \"Don't have an account?\"}</span>\r\n            <span className=\"toggle-link\" onClick={toggleAuthMode}>\r\n              {isSignUp ? 'Sign in' : 'Sign up'}\r\n            </span>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      \r\n      {isLoading && (\r\n        <div className=\"loading-screen\" id=\"loading\">\r\n          <div className=\"spinner\"></div>\r\n          <span>Authenticating...</span>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthApp;\r\n","import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport AuthApp from './AuthApp.jsx';\r\n\r\nconst container = document.getElementById('auth-root');\r\nconst root = createRoot(container);\r\nroot.render(<AuthApp />);\r\n"],"names":["useState","useEffect","jsxs","jsx","Fragment"],"mappings":"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"}