{"version":3,"file":"pokemon-detail.js","sources":["../../../src/services/EvolutionService.js","../../../src/pokemon-detail/components/LoadingState.jsx","../../../src/pokemon-detail/components/ErrorState.jsx","../../../src/pokemon-detail/components/PokemonDetailCard.jsx","../../../src/pokemon-detail/PokemonDetailApp.jsx","../../../src/pokemon-detail/main.jsx"],"sourcesContent":["import { EVOLUTION_DATA, CANDY_FAMILY_MAP, POKEMON_NAMES } from '../shared/evolution-data.js';\r\nimport { StorageService } from './StorageService.js';\r\nimport { SecurityValidator } from '../utils/SecurityValidator.js';\r\nimport { Utils } from '../utils/Utils.js';\r\n\r\n// Handles Pokemon evolution logic and candy requirements\r\nexport class EvolutionService {\r\n    constructor(appState) {\r\n        this.appState = appState;\r\n    }\r\n\r\n    // Check if Pokemon has evolution available\r\n    canEvolve(pokemonId) {\r\n        const id = parseInt(pokemonId);\r\n        return EVOLUTION_DATA.hasOwnProperty(id);\r\n    }\r\n\r\n    // Get evolution details for Pokemon\r\n    getEvolutionInfo(pokemonId) {\r\n        const id = parseInt(pokemonId);\r\n        const evolutionData = EVOLUTION_DATA[id];\r\n        \r\n        if (!evolutionData) {\r\n            return null;\r\n        }\r\n\r\n        // Handle special case for Eevee (multiple evolutions)\r\n        if (evolutionData.evolutions) {\r\n            // For now, return the first evolution (Vaporeon)\r\n            // In a full implementation, you might want to let the user choose\r\n            return evolutionData.evolutions[0];\r\n        }\r\n\r\n        return evolutionData;\r\n    }\r\n\r\n    // Get which candy type Pokemon uses for evolution\r\n    getBaseCandyId(pokemonId) {\r\n        const id = parseInt(pokemonId);\r\n        return CANDY_FAMILY_MAP[id] || id;\r\n    }\r\n\r\n    // Get display name for Pokemon's candy type\r\n    getBaseCandyName(pokemonId) {\r\n        const baseCandyId = this.getBaseCandyId(pokemonId);\r\n        const pokemonName = POKEMON_NAMES[baseCandyId];\r\n        return pokemonName ? `${pokemonName}` : 'Unknown';\r\n    }\r\n\r\n    // Check if user has enough candy to evolve Pokemon\r\n    validateEvolutionWithBaseCandy(pokemonId, currentCandy) {\r\n        const evolutionInfo = this.getEvolutionInfo(pokemonId);\r\n        \r\n        if (!evolutionInfo) {\r\n            return { success: false, message: 'This Pokemon cannot evolve!' };\r\n        }\r\n\r\n        if (currentCandy < evolutionInfo.candyCost) {\r\n            const baseCandyName = this.getBaseCandyName(pokemonId);\r\n            return { \r\n                success: false, \r\n                message: `Not enough candy! Need ${evolutionInfo.candyCost} ${baseCandyName} candy, but you only have ${currentCandy}.` \r\n            };\r\n        }\r\n\r\n        return { success: true };\r\n    }\r\n\r\n    // Transform Pokemon into its evolved form\r\n    async evolvePokemon(pokemon, currentCandy) {\r\n        try {\r\n            const pokemonId = parseInt(pokemon.pokemon_id);\r\n            const evolutionInfo = this.getEvolutionInfo(pokemonId);\r\n            \r\n            if (!evolutionInfo) {\r\n                throw new Error('This Pokemon cannot evolve!');\r\n            }\r\n\r\n            // Validate evolution requirements\r\n            const validation = this.validateEvolutionWithBaseCandy(pokemonId, currentCandy);\r\n            if (!validation.success) {\r\n                throw new Error(validation.message);\r\n            }\r\n\r\n            // Security validation\r\n            const securityCheck = await SecurityValidator.validateRequest('evolve_pokemon', {\r\n                pokemon,\r\n                evolutionInfo,\r\n                currentCandy\r\n            }, this.appState.currentUser);\r\n\r\n            if (!securityCheck.valid) {\r\n                throw new Error(`Security validation failed: ${securityCheck.error}`);\r\n            }\r\n\r\n            // Create evolved Pokemon\r\n            const evolvedPokemon = {\r\n                ...pokemon,\r\n                pokemon_id: evolutionInfo.evolvesTo,\r\n                name: evolutionInfo.name.toLowerCase(),\r\n                evolved_at: new Date().toISOString(),\r\n                evolved_from: pokemonId\r\n            };\r\n\r\n            // Check if user is logged in - evolution requires authentication\r\n            if (!this.appState.canSync()) {\r\n                throw new Error('You must be logged in to evolve Pokemon!');\r\n            }\r\n\r\n            // Validate that we have a valid Pokemon object with required fields\r\n            if (!pokemon.id) {\r\n                throw new Error('Invalid Pokemon object: missing primary key (id)');\r\n            }\r\n\r\n            if (!pokemon.user_id || pokemon.user_id !== this.appState.currentUser.id) {\r\n                throw new Error('Pokemon does not belong to the current user');\r\n            }\r\n\r\n            console.log('✅ Evolving Pokemon from Supabase:', pokemon);\r\n\r\n            // Update Pokemon in Supabase database using primary key (much more reliable)\r\n            const { error: updateError } = await this.appState.supabase\r\n                .from('pokemon')\r\n                .update({\r\n                    pokemon_id: evolvedPokemon.pokemon_id,\r\n                    name: evolvedPokemon.name,\r\n                    evolved_at: evolvedPokemon.evolved_at,\r\n                    evolved_from: evolvedPokemon.evolved_from\r\n                })\r\n                .eq('id', pokemon.id); // Use the primary key from the pokemon object\r\n\r\n            if (updateError) {\r\n                console.error('❌ Error updating Pokemon in Supabase:', updateError);\r\n                throw new Error('Failed to update Pokemon in database');\r\n            }\r\n\r\n            console.log('✅ Pokemon successfully evolved in Supabase');\r\n\r\n            // Send message to background script for candy deduction\r\n            if (chrome.runtime && chrome.runtime.sendMessage) {\r\n                try {\r\n                    const response = await chrome.runtime.sendMessage({\r\n                        type: 'POKEMON_EVOLVED',\r\n                        data: { \r\n                            pokemon: evolvedPokemon,\r\n                            candyCost: evolutionInfo.candyCost,\r\n                            baseCandyId: this.getBaseCandyId(pokemonId)\r\n                        }\r\n                    });\r\n                    \r\n                    if (response && response.success) {\r\n                        console.log('✅ Evolution message sent successfully - Candy deducted!');\r\n                    }\r\n                } catch (candyError) {\r\n                    console.error('❌ Error sending evolution message:', candyError);\r\n                    // Don't fail the evolution if candy message fails\r\n                }\r\n            }\r\n\r\n            return { success: true, evolvedPokemon };\r\n\r\n        } catch (error) {\r\n            console.error('Error evolving Pokemon:', error);\r\n            return { success: false, error: error.message };\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nconst LoadingState = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"loading\">\r\n        <div className=\"loading-text\">Loading Pokemon...</div>\r\n        <div className=\"pokeball-spinner\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingState;\r\n","import React from 'react';\r\n\r\nconst ErrorState = ({ message = 'An error occurred' }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"error\">\r\n        <div className=\"error-icon\">❌</div>\r\n        <div className=\"error-title\">Pokemon Not Found</div>\r\n        <div className=\"error-message\">{message}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorState;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { CONFIG } from '../../shared/config.js';\r\nimport { Utils } from '../../utils/Utils.js';\r\nimport { TypeUtils } from '../../utils/TypeUtils.js';\r\n\r\nconst PokemonDetailCard = ({\r\n  pokemon,\r\n  pokemonData,\r\n  speciesData,\r\n  candyCount,\r\n  baseCandyName,\r\n  canEvolve,\r\n  evolutionInfo,\r\n  onEvolve,\r\n  onSummon,\r\n  onRelease\r\n}) => {\r\n  const cardFrameRef = useRef(null);\r\n  const [isEvolving, setIsEvolving] = useState(false);\r\n  const [isReleasing, setIsReleasing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Apply type background when component mounts or data changes\r\n    if (pokemonData && cardFrameRef.current) {\r\n      TypeUtils.applyTypeBackground(pokemonData.types, cardFrameRef.current);\r\n    }\r\n  }, [pokemonData]);\r\n\r\n  const handleEvolveClick = async () => {\r\n    setIsEvolving(true);\r\n    try {\r\n      await onEvolve();\r\n    } finally {\r\n      setIsEvolving(false);\r\n    }\r\n  };\r\n\r\n  const handleReleaseClick = async () => {\r\n    setIsReleasing(true);\r\n    try {\r\n      await onRelease();\r\n    } finally {\r\n      setIsReleasing(false);\r\n    }\r\n  };\r\n\r\n  const getSpriteUrl = () => {\r\n    if (!pokemon) return '';\r\n    const shinyPath = pokemon.shiny ? 'shiny/' : '';\r\n    return `${CONFIG.ANIMATED_SPRITE_BASE_URL}/${shinyPath}${pokemon.id}.gif`;\r\n  };\r\n\r\n  const getStaticSpriteUrl = () => {\r\n    if (!pokemon) return '';\r\n    const shinyPath = pokemon.shiny ? 'shiny/' : '';\r\n    return `${CONFIG.SPRITE_BASE_URL}/${shinyPath}${pokemon.id}.png`;\r\n  };\r\n\r\n  const getDescription = () => {\r\n    if (!speciesData || !speciesData.flavor_text_entries) {\r\n      return '\"Loading description...\"';\r\n    }\r\n    \r\n    const flavorTextEntry = speciesData.flavor_text_entries.find(entry => entry.language.name === 'en');\r\n    if (flavorTextEntry) {\r\n      return `\"${flavorTextEntry.flavor_text.replace(/[\\n\\f]/g, ' ')}\"`;\r\n    }\r\n    \r\n    return '\"No description available.\"';\r\n  };\r\n\r\n  const getCandyLabel = () => {\r\n    const candyName = baseCandyName || (pokemon ? Utils.capitalizeFirst(pokemon.name) : 'Pokemon');\r\n    return `${candyName} Candy`;\r\n  };\r\n\r\n  const getEvolveCostText = () => {\r\n    if (!evolutionInfo) return '';\r\n    \r\n    const candyNeeded = Math.max(0, evolutionInfo.candyCost - candyCount);\r\n    if (candyNeeded > 0) {\r\n      return `${candyNeeded} more candy needed`;\r\n    } else {\r\n      return `Costs ${evolutionInfo.candyCost} candy`;\r\n    }\r\n  };\r\n\r\n  const getEvolveCostColor = () => {\r\n    if (!evolutionInfo) return '#666';\r\n    \r\n    const candyNeeded = Math.max(0, evolutionInfo.candyCost - candyCount);\r\n    return candyNeeded > 0 ? '#ff6b6b' : '#4CAF50';\r\n  };\r\n\r\n  const canEvolveNow = () => {\r\n    return canEvolve && evolutionInfo && candyCount >= evolutionInfo.candyCost;\r\n  };\r\n\r\n  const getCatchInfo = () => {\r\n    if (!pokemon || !pokemon.site || !pokemon.caughtAt) {\r\n      return { site: 'Unknown site', date: 'Unknown date' };\r\n    }\r\n    \r\n    return {\r\n      site: `Caught on ${pokemon.site}`,\r\n      date: new Date(pokemon.caughtAt).toLocaleDateString('en-US', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric'\r\n      })\r\n    };\r\n  };\r\n\r\n  if (!pokemon) {\r\n    return null;\r\n  }\r\n\r\n  const name = pokemon.name ? Utils.capitalizeFirst(pokemon.name) : 'Unknown';\r\n  const displayName = pokemon.shiny ? `${name} ⭐` : name;\r\n  const catchInfo = getCatchInfo();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div id=\"pokemon-details\">\r\n        <div id=\"card-frame\" className=\"card-frame\" ref={cardFrameRef}>\r\n          <div className=\"white-card\">\r\n            <div className=\"sprite-container\">\r\n              <img \r\n                className=\"pokemon-img\" \r\n                src={getSpriteUrl()}\r\n                alt={pokemon.name}\r\n                onError={(e) => {\r\n                  e.target.src = getStaticSpriteUrl();\r\n                  e.target.onerror = () => {\r\n                    e.target.style.display = 'none';\r\n                  };\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <h2 className=\"name\">{displayName}</h2>\r\n            <p className=\"number\">#{String(pokemon.id).padStart(3, '0')}</p>\r\n\r\n            <div className=\"divider\"></div>\r\n\r\n            <div className=\"info-row\">\r\n              {/* Height */}\r\n              <span className=\"value\">\r\n                {pokemonData ? `${pokemonData.height / 10} m` : '-- m'}\r\n              </span>\r\n              \r\n              {/* Types */}\r\n              <div\r\n                className=\"types\"\r\n                dangerouslySetInnerHTML={{\r\n                  __html: pokemonData ? TypeUtils.createTypeIconsHTML(pokemonData.types, true) : ''\r\n                }}\r\n              />\r\n              \r\n              {/* Weight */}\r\n              <span className=\"value\">\r\n                {pokemonData ? `${pokemonData.weight / 10} kg` : '-- kg'}\r\n              </span>\r\n\r\n              {/* Labels */}\r\n              <span className=\"label\">HEIGHT</span>\r\n              <span className=\"label\">\r\n                {pokemonData ? TypeUtils.formatTypesLabel(pokemonData.types) : 'LOADING'}\r\n              </span>\r\n              <span className=\"label\">WEIGHT</span>\r\n            </div>\r\n\r\n            <div className=\"divider\"></div>\r\n\r\n            <p className=\"candy\">\r\n              <span>{getCandyLabel()}</span>: \r\n              <strong> {candyCount}</strong>\r\n            </p>\r\n\r\n            {canEvolve && (\r\n              <div className=\"evolve-section\">\r\n                <div className=\"evolve-row\">\r\n                  <button \r\n                    className={`btn evolve-left ${!canEvolveNow() ? 'disabled' : ''}`}\r\n                    onClick={handleEvolveClick}\r\n                    disabled={!canEvolveNow() || isEvolving}\r\n                    style={{ opacity: canEvolveNow() ? '1' : '0.6' }}\r\n                  >\r\n                    {isEvolving ? 'Evolving...' : 'EVOLVE'}\r\n                  </button>\r\n                  <div \r\n                    className=\"evolve-right\"\r\n                    style={{ color: getEvolveCostColor() }}\r\n                  >\r\n                    {getEvolveCostText()}\r\n                  </div>\r\n                </div>\r\n\r\n                <button className=\"btn summon\" onClick={onSummon}>\r\n                  SUMMON\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            {!canEvolve && (\r\n              <div className=\"evolve-section\">\r\n                <button className=\"btn summon\" onClick={onSummon}>\r\n                  SUMMON\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"divider\"></div>\r\n            \r\n            <div className=\"description\">\r\n              {getDescription()}\r\n            </div>\r\n\r\n            <div className=\"footer\">\r\n              <p>CAUGHT ON<br/>\r\n              <a href=\"#\" style={{ textDecoration: 'none', color: 'inherit' }}>\r\n                {catchInfo.site}\r\n              </a><br/>\r\n              <span>{catchInfo.date}</span></p>\r\n            </div>\r\n            \r\n            <div className=\"release-container\">\r\n              <button \r\n                className=\"btn release-button\" \r\n                onClick={handleReleaseClick}\r\n                disabled={isReleasing}\r\n              >\r\n                {isReleasing ? 'Releasing...' : '🗑️ RELEASE'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonDetailCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AppState } from '../utils/AppState.js';\r\nimport { APIService } from '../services/ApiService.js';\r\nimport { AuthService } from '../services/AuthService.js';\r\nimport { PokemonService } from '../services/PokemonService.js';\r\nimport { CandyService } from '../services/CandyService.js';\r\nimport { EvolutionService } from '../services/EvolutionService.js';\r\nimport { StorageService } from '../services/StorageService.js';\r\nimport { Utils } from '../utils/Utils.js';\r\nimport LoadingState from './components/LoadingState.jsx';\r\nimport ErrorState from './components/ErrorState.jsx';\r\nimport PokemonDetailCard from './components/PokemonDetailCard.jsx';\r\n\r\nconst PokemonDetailApp = () => {\r\n  const [viewState, setViewState] = useState('loading'); // 'loading', 'error', 'details'\r\n  const [pokemon, setPokemon] = useState(null);\r\n  const [pokemonData, setPokemonData] = useState(null);\r\n  const [speciesData, setSpeciesData] = useState(null);\r\n  const [candyCount, setCandyCount] = useState(0);\r\n  const [baseCandyName, setBaseCandyName] = useState(null);\r\n  const [evolutionInfo, setEvolutionInfo] = useState(null);\r\n  const [canEvolve, setCanEvolve] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('An error occurred');\r\n\r\n  // Services (initialized once)\r\n  const [services] = useState(() => {\r\n    const state = new AppState();\r\n    return {\r\n      state,\r\n      auth: new AuthService(state),\r\n      pokemon: new PokemonService(state),\r\n      evolution: new EvolutionService(state),\r\n      candy: null // Will be initialized after auth\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    initializePokemonDetail();\r\n  }, []);\r\n\r\n  const initializePokemonDetail = async () => {\r\n    try {\r\n      setViewState('loading');\r\n      \r\n      // Initialize authentication\r\n      await initializeAuth();\r\n      \r\n      // Get Pokemon from URL params - always use these for display\r\n      const params = Utils.parseURLParams();\r\n      \r\n      console.log('🔍 Loading Pokemon with params:', {\r\n        id: params.id,\r\n        caughtAt: params.caughtAt,\r\n        site: params.site,\r\n        userLoggedIn: !!services.state.currentUser\r\n      });\r\n      \r\n      if (!params.supabaseId) {\r\n        throw new Error(\"No Supabase ID found in URL. Cannot load Pokémon.\");\r\n      }\r\n\r\n      // Check if user is logged in before trying to fetch from Supabase\r\n      if (!services.state.currentUser) {\r\n        throw new Error(\"You must be logged in to view Pokémon details.\");\r\n      }\r\n\r\n      const { data: fetchedPokemon, error } = await services.state.supabase\r\n        .from('pokemon')\r\n        .select('*')\r\n        .eq('id', params.supabaseId)\r\n        .single();\r\n\r\n      if (error || !fetchedPokemon) {\r\n        console.error('❌ Could not find Pokémon in Supabase:', error);\r\n        throw new Error(\"Could not find the specified Pokémon.\");\r\n      }\r\n\r\n      // Verify ownership after fetching (security check)\r\n      if (fetchedPokemon.user_id !== services.state.currentUser.id) {\r\n        console.error('❌ Pokémon belongs to different user:', {\r\n          pokemonUserId: fetchedPokemon.user_id,\r\n          currentUserId: services.state.currentUser.id\r\n        });\r\n        throw new Error(\"You don't have permission to view this Pokémon.\");\r\n      }\r\n      \r\n      console.log('📝 Using Pokemon data from Supabase for display:', fetchedPokemon);\r\n      setPokemon(fetchedPokemon);\r\n      services.state.setPokemon(fetchedPokemon);\r\n\r\n      // Fetch API data\r\n      await fetchApiData(fetchedPokemon.pokemon_id);\r\n      \r\n      setViewState('details');\r\n    } catch (error) {\r\n      console.error('Error initializing Pokemon detail:', error);\r\n      setErrorMessage(error.message);\r\n      setViewState('error');\r\n    }\r\n  };\r\n\r\n  const initializeAuth = async () => {\r\n    try {\r\n      const client = await services.auth.initializeSupabase();\r\n      services.state.setSupabase(client);\r\n      const user = await services.auth.initializeAuth();\r\n      services.state.setUser(user);\r\n      \r\n      console.log('🔧 PokemonDetail: Auth initialized');\r\n      services.state.logAuthStatus();\r\n      \r\n      // Initialize candy service if user is logged in\r\n      if (user) {\r\n        console.log('🔧 PokemonDetail: Initializing CandyService for user:', user.email);\r\n        services.candy = new CandyService(services.state);\r\n      }\r\n    } catch (error) {\r\n      console.warn('❌ Auth initialization failed:', error);\r\n      services.state.logAuthStatus();\r\n    }\r\n  };\r\n\r\n  const fetchApiData = async (pokemonId) => {\r\n    try {\r\n      const cache = services.state.getCache();\r\n      const [pokemonApiData, speciesApiData] = await Promise.all([\r\n        APIService.fetchPokemonData(pokemonId, cache),\r\n        APIService.fetchSpeciesData(pokemonId, cache)\r\n      ]);\r\n      \r\n      setPokemonData(pokemonApiData);\r\n      setSpeciesData(speciesApiData);\r\n      services.state.setPokemonData(pokemonApiData);\r\n      \r\n      // Load candy data if user is logged in\r\n      let currentCandyCount = 0;\r\n      let currentBaseCandyName = null;\r\n      if (services.candy) {\r\n        try {\r\n          const candyData = await services.candy.getCandyForUser();\r\n          const baseCandyId = services.evolution.getBaseCandyId(pokemonId);\r\n          currentCandyCount = candyData.get(baseCandyId) || 0;\r\n          currentBaseCandyName = services.evolution.getBaseCandyName(pokemonId);\r\n        } catch (error) {\r\n          console.error('Error loading candy data:', error);\r\n        }\r\n      }\r\n      \r\n      setCandyCount(currentCandyCount);\r\n      setBaseCandyName(currentBaseCandyName);\r\n      \r\n      // Check evolution availability - show evolution UI regardless of login status\r\n      const pokemonCanEvolve = services.evolution.canEvolve(pokemonId);\r\n      const currentEvolutionInfo = pokemonCanEvolve ? services.evolution.getEvolutionInfo(pokemonId) : null;\r\n      \r\n      setCanEvolve(pokemonCanEvolve);\r\n      setEvolutionInfo(currentEvolutionInfo);\r\n      \r\n      console.log('🔧 Evolution status:', {\r\n        pokemonId,\r\n        userLoggedIn: !!services.state.currentUser,\r\n        pokemonCanEvolve,\r\n        hasEvolutionInfo: !!currentEvolutionInfo,\r\n        candyCount: currentCandyCount\r\n      });\r\n      \r\n    } catch (error) {\r\n      console.error('Error fetching API data:', error);\r\n      // Don't throw, as basic info is already displayed\r\n    }\r\n  };\r\n\r\n  const handleEvolution = async () => {\r\n    const pokemonId = parseInt(pokemon.pokemon_id);\r\n    \r\n    // Check if user is authenticated\r\n    if (!services.candy) {\r\n      alert('You must be logged in to evolve Pokemon!');\r\n      return;\r\n    }\r\n\r\n    // Get current candy count using base candy ID\r\n    let currentCandy = 0;\r\n    try {\r\n      const candyData = await services.candy.getCandyForUser();\r\n      const baseCandyId = services.evolution.getBaseCandyId(pokemonId);\r\n      currentCandy = candyData.get(baseCandyId) || 0;\r\n    } catch (error) {\r\n      console.error('Error getting candy count:', error);\r\n      alert('Failed to check candy count. Please try again.');\r\n      return;\r\n    }\r\n\r\n    // Get evolution info\r\n    const currentEvolutionInfo = services.evolution.getEvolutionInfo(pokemonId);\r\n    if (!currentEvolutionInfo) {\r\n      alert('This Pokemon cannot evolve!');\r\n      return;\r\n    }\r\n\r\n    // Validate evolution using base candy\r\n    const validation = services.evolution.validateEvolutionWithBaseCandy(pokemonId, currentCandy);\r\n    if (!validation.success) {\r\n      alert(validation.message);\r\n      return;\r\n    }\r\n\r\n    // Show confirmation dialog\r\n    const confirmMessage = `Evolve ${Utils.capitalizeFirst(pokemon.name)} into ${currentEvolutionInfo.name}?\\n\\nThis will cost ${currentEvolutionInfo.candyCost} candy and cannot be undone.`;\r\n    if (!confirm(confirmMessage)) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Perform evolution\r\n      const result = await services.evolution.evolvePokemon(pokemon, currentCandy);\r\n      \r\n      if (!result.success) {\r\n        throw new Error(result.error);\r\n      }\r\n\r\n      // Show success message\r\n      const fromName = Utils.capitalizeFirst(pokemon.name);\r\n      const toName = Utils.capitalizeFirst(result.evolvedPokemon.name);\r\n      showEvolutionSuccess(fromName, toName);\r\n\r\n      // Update current Pokemon state\r\n      setPokemon(result.evolvedPokemon);\r\n      services.state.setPokemon(result.evolvedPokemon);\r\n\r\n      // Fetch new API data for evolved Pokemon\r\n      const cache = services.state.getCache();\r\n      const evolvedPokemonData = await APIService.fetchPokemonData(result.evolvedPokemon.pokemon_id, cache);\r\n      setPokemonData(evolvedPokemonData);\r\n      services.state.setPokemonData(evolvedPokemonData);\r\n\r\n      // Wait for background script to process candy deduction, then refresh candy data\r\n      console.log('⏳ Waiting for candy deduction to process...');\r\n      await new Promise(resolve => setTimeout(resolve, 1500)); // Wait 1.5 seconds\r\n      \r\n      console.log('🔄 Refreshing candy data after evolution...');\r\n      const newCandyData = await services.candy.refreshCandyData();\r\n      const newBaseCandyId = services.evolution.getBaseCandyId(result.evolvedPokemon.pokemon_id);\r\n      const newCandyCount = newCandyData.get(newBaseCandyId) || 0;\r\n      const newBaseCandyName = services.evolution.getBaseCandyName(result.evolvedPokemon.pokemon_id);\r\n      \r\n      setCandyCount(newCandyCount);\r\n      setBaseCandyName(newBaseCandyName);\r\n      \r\n      const newCanEvolve = services.evolution.canEvolve(result.evolvedPokemon.pokemon_id);\r\n      const newEvolutionInfo = newCanEvolve ? services.evolution.getEvolutionInfo(result.evolvedPokemon.pokemon_id) : null;\r\n      \r\n      setCanEvolve(newCanEvolve);\r\n      setEvolutionInfo(newEvolutionInfo);\r\n      \r\n      console.log(`✅ UI updated with new candy count: ${newCandyCount} ${newBaseCandyName} candy`);\r\n\r\n      // Fetch and update species data for evolved Pokemon\r\n      try {\r\n        const evolvedSpeciesData = await APIService.fetchSpeciesData(result.evolvedPokemon.pokemon_id, cache);\r\n        setSpeciesData(evolvedSpeciesData);\r\n      } catch (speciesError) {\r\n        console.warn('Could not fetch evolved Pokemon species data:', speciesError);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error evolving Pokemon:', error);\r\n      alert(`Evolution failed: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleRelease = async () => {\r\n    if (!confirm('Are you sure you want to release this Pokémon? This action cannot be undone.')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await services.pokemon.releasePokemon(pokemon);\r\n      alert('Pokémon released! 💔');\r\n      await Utils.delay(500);\r\n      window.close();\r\n    } catch (error) {\r\n      console.error('Error releasing Pokémon:', error);\r\n      alert(`Failed to release Pokémon: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleSummon = () => {\r\n    alert('Summon feature coming soon!');\r\n  };\r\n\r\n  const showEvolutionSuccess = (fromName, toName) => {\r\n    // Create a temporary success message\r\n    const successMessage = document.createElement('div');\r\n    successMessage.className = 'evolution-success';\r\n    successMessage.innerHTML = `\r\n      <div class=\"success-content\">\r\n        <div class=\"success-icon\">🎉</div>\r\n        <div class=\"success-text\">${fromName} evolved into ${toName}!</div>\r\n      </div>\r\n    `;\r\n    \r\n    // Add styles\r\n    successMessage.style.cssText = `\r\n      position: fixed;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      background: rgba(76, 175, 80, 0.95);\r\n      color: white;\r\n      padding: 20px;\r\n      border-radius: 10px;\r\n      text-align: center;\r\n      z-index: 1000;\r\n      font-weight: bold;\r\n      box-shadow: 0 4px 20px rgba(0,0,0,0.3);\r\n    `;\r\n    \r\n    document.body.appendChild(successMessage);\r\n    \r\n    // Remove after 3 seconds\r\n    setTimeout(() => {\r\n      if (successMessage.parentNode) {\r\n        successMessage.parentNode.removeChild(successMessage);\r\n      }\r\n    }, 3000);\r\n  };\r\n\r\n  if (viewState === 'loading') {\r\n    return <LoadingState />;\r\n  }\r\n\r\n  if (viewState === 'error') {\r\n    return <ErrorState message={errorMessage} />;\r\n  }\r\n\r\n  return (\r\n    <PokemonDetailCard\r\n      pokemon={pokemon}\r\n      pokemonData={pokemonData}\r\n      speciesData={speciesData}\r\n      candyCount={candyCount}\r\n      baseCandyName={baseCandyName}\r\n      canEvolve={canEvolve}\r\n      evolutionInfo={evolutionInfo}\r\n      onEvolve={handleEvolution}\r\n      onSummon={handleSummon}\r\n      onRelease={handleRelease}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PokemonDetailApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport PokemonDetailApp from './PokemonDetailApp.jsx';\r\n\r\nReactDOM.createRoot(document.getElementById('pokemon-detail-root')).render(\r\n  <React.StrictMode>\r\n    <PokemonDetailApp />\r\n  </React.StrictMode>\r\n);\r\n"],"names":["jsxs","jsx","useRef","useState","useEffect","client","ReactDOM"],"mappings":"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"}