{"version":3,"file":"TypeUtils.js","sources":["../src/utils/TypeUtils.js"],"sourcesContent":["export class TypeUtils {\r\n    \r\n    /**\r\n     * Get type icon HTML\r\n     */\r\n    static getTypeIcon(typeName) {\r\n        return `<img src=\"${this.getTypeIconPath(typeName)}\" alt=\"${typeName}\" class=\"type-icon\">`;\r\n    }\r\n\r\n    /**\r\n     * Get the path for a type icon\r\n     */\r\n    static getTypeIconPath(typeName) {\r\n        const iconMap = {\r\n            normal: 'https://archives.bulbagarden.net/media/upload/2/22/GO_Normal.png',\r\n            fire: 'https://archives.bulbagarden.net/media/upload/0/0e/GO_Fire.png',\r\n            water: 'https://archives.bulbagarden.net/media/upload/a/aa/GO_Water.png',\r\n            electric: 'https://archives.bulbagarden.net/media/upload/4/4a/GO_Electric.png',\r\n            grass: 'https://archives.bulbagarden.net/media/upload/6/61/GO_Grass.png',\r\n            ice: 'https://archives.bulbagarden.net/media/upload/c/c6/GO_Ice.png',\r\n            fighting: 'https://archives.bulbagarden.net/media/upload/1/1e/GO_Fighting.png',\r\n            poison: 'https://archives.bulbagarden.net/media/upload/f/ff/GO_Poison.png',\r\n            ground: 'https://archives.bulbagarden.net/media/upload/2/21/GO_Ground.png',\r\n            flying: 'https://archives.bulbagarden.net/media/upload/8/87/GO_Flying.png',\r\n            psychic: 'https://archives.bulbagarden.net/media/upload/f/f2/GO_Psychic.png',\r\n            bug: 'https://archives.bulbagarden.net/media/upload/9/94/GO_Bug.png',\r\n            rock: 'https://archives.bulbagarden.net/media/upload/1/11/GO_Rock.png',\r\n            ghost: 'https://archives.bulbagarden.net/media/upload/a/a1/GO_Ghost.png',\r\n            dragon: 'https://archives.bulbagarden.net/media/upload/9/90/GO_Dragon.png',\r\n            dark: 'https://archives.bulbagarden.net/media/upload/7/73/GO_Dark.png',\r\n            steel: 'https://archives.bulbagarden.net/media/upload/d/d2/GO_Steel.png',\r\n            fairy: 'https://archives.bulbagarden.net/media/upload/a/ae/GO_Fairy.png'\r\n        };\r\n        return iconMap[typeName] || '';\r\n    }\r\n\r\n    /**\r\n     * Get type colors for background and border\r\n     */\r\n    static getTypeColor(typeName) {\r\n        const colors = {\r\n            normal: { background: '#A8A878', border: '#8A8A59' },\r\n            fire: { background: '#F08030', border: '#C06020' },\r\n            water: { background: '#6890F0', border: '#4070D0' },\r\n            electric: { background: '#F8D030', border: '#C8A020' },\r\n            grass: { background: '#78C850', border: '#58A030' },\r\n            ice: { background: '#98D8D8', border: '#70B8B8' },\r\n            fighting: { background: '#C03028', border: '#902018' },\r\n            poison: { background: '#A040A0', border: '#803080' },\r\n            ground: { background: '#E0C068', border: '#C0A048' },\r\n            flying: { background: '#A890F0', border: '#8870D0' },\r\n            psychic: { background: '#F85888', border: '#C83868' },\r\n            bug: { background: '#A8B820', border: '#889818' },\r\n            rock: { background: '#B8A038', border: '#988028' },\r\n            ghost: { background: '#705898', border: '#504078' },\r\n            dragon: { background: '#7038F8', border: '#5020C8' },\r\n            dark: { background: '#705848', border: '#504038' },\r\n            steel: { background: '#B8B8D0', border: '#9898B0' },\r\n            fairy: { background: '#EE99AC', border: '#D0708C' }\r\n        };\r\n        return colors[typeName] || { background: '#dff0cb', border: '#4ecf87' };\r\n    }\r\n\r\n    /**\r\n     * Format types array to uppercase string\r\n     */\r\n    static formatTypesLabel(types) {\r\n        return types.map(typeInfo => typeInfo.type.name.toUpperCase()).join(' / ');\r\n    }\r\n\r\n    /**\r\n     * Apply type-based background styling to page\r\n     */\r\n    static applyTypeBackground(types, cardFrameElement = null) {\r\n        const primaryType = types[0].type.name;\r\n        const typeColor = this.getTypeColor(primaryType);\r\n\r\n        document.body.style.backgroundColor = typeColor.background;\r\n        if (cardFrameElement) {\r\n            cardFrameElement.style.borderColor = typeColor.border;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create type icons HTML for a Pokemon's types\r\n     */\r\n    static createTypeIconsHTML(types, useContainer = false) {\r\n        return types.map(typeInfo => {\r\n            const typeName = typeInfo.type.name;\r\n            const icon = this.getTypeIcon(typeName);\r\n            return useContainer ? \r\n                `<span class=\"type-icon-container ${typeName}\">${icon}</span>` : \r\n                icon;\r\n        }).join('');\r\n    }\r\n}\r\n"],"names":[],"mappings":"AAAO,MAAM,UAAU;AAAA;AAAA;AAAA;AAAA,EAKnB,OAAO,YAAY,UAAU;AACzB,WAAO,aAAa,KAAK,gBAAgB,QAAQ,CAAC,UAAU,QAAQ;AAAA,EACxE;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,gBAAgB,UAAU;AAC7B,UAAM,UAAU;AAAA,MACZ,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,MACP,UAAU;AAAA,MACV,OAAO;AAAA,MACP,KAAK;AAAA,MACL,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,KAAK;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,MACP,OAAO;AAAA,IACnB;AACQ,WAAO,QAAQ,QAAQ,KAAK;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,aAAa,UAAU;AAC1B,UAAM,SAAS;AAAA,MACX,QAAQ,EAAE,YAAY,WAAW,QAAQ,UAAS;AAAA,MAClD,MAAM,EAAE,YAAY,WAAW,QAAQ,UAAS;AAAA,MAChD,OAAO,EAAE,YAAY,WAAW,QAAQ,UAAS;AAAA,MACjD,UAAU,EAAE,YAAY,WAAW,QAAQ,UAAS;AAAA,MACpD,OAAO,EAAE,YAAY,WAAW,QAAQ,UAAS;AAAA,MACjD,KAAK,EAAE,YAAY,WAAW,QAAQ,UAAS;AAAA,MAC/C,UAAU,EAAE,YAAY,WAAW,QAAQ,UAAS;AAAA,MACpD,QAAQ,EAAE,YAAY,WAAW,QAAQ,UAAS;AAAA,MAClD,QAAQ,EAAE,YAAY,WAAW,QAAQ,UAAS;AAAA,MAClD,QAAQ,EAAE,YAAY,WAAW,QAAQ,UAAS;AAAA,MAClD,SAAS,EAAE,YAAY,WAAW,QAAQ,UAAS;AAAA,MACnD,KAAK,EAAE,YAAY,WAAW,QAAQ,UAAS;AAAA,MAC/C,MAAM,EAAE,YAAY,WAAW,QAAQ,UAAS;AAAA,MAChD,OAAO,EAAE,YAAY,WAAW,QAAQ,UAAS;AAAA,MACjD,QAAQ,EAAE,YAAY,WAAW,QAAQ,UAAS;AAAA,MAClD,MAAM,EAAE,YAAY,WAAW,QAAQ,UAAS;AAAA,MAChD,OAAO,EAAE,YAAY,WAAW,QAAQ,UAAS;AAAA,MACjD,OAAO,EAAE,YAAY,WAAW,QAAQ,UAAS;AAAA,IAC7D;AACQ,WAAO,OAAO,QAAQ,KAAK,EAAE,YAAY,WAAW,QAAQ;EAChE;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,iBAAiB,OAAO;AAC3B,WAAO,MAAM,IAAI,cAAY,SAAS,KAAK,KAAK,YAAW,CAAE,EAAE,KAAK,KAAK;AAAA,EAC7E;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,oBAAoB,OAAO,mBAAmB,MAAM;AACvD,UAAM,cAAc,MAAM,CAAC,EAAE,KAAK;AAClC,UAAM,YAAY,KAAK,aAAa,WAAW;AAE/C,aAAS,KAAK,MAAM,kBAAkB,UAAU;AAChD,QAAI,kBAAkB;AAClB,uBAAiB,MAAM,cAAc,UAAU;AAAA,IACnD;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,oBAAoB,OAAO,eAAe,OAAO;AACpD,WAAO,MAAM,IAAI,cAAY;AACzB,YAAM,WAAW,SAAS,KAAK;AAC/B,YAAM,OAAO,KAAK,YAAY,QAAQ;AACtC,aAAO,eACH,oCAAoC,QAAQ,KAAK,IAAI,YACrD;AAAA,IACR,CAAC,EAAE,KAAK,EAAE;AAAA,EACd;AACJ;"}