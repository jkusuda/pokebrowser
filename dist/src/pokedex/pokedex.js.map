{"version":3,"file":"pokedex.js","sources":["../../../src/pokedex/components/PokedexHeader.jsx","../../../src/pokedex/components/PokedexControls.jsx","../../../src/pokedex/components/PokedexEntry.jsx","../../../src/pokedex/components/PokedexGrid.jsx","../../../src/pokedex/PokedexApp.jsx","../../../src/pokedex/main.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst PokedexHeader = ({ stats }) => {\r\n  return (\r\n    <header className=\"pokedex-header\">\r\n      <h1>Pokedex</h1>\r\n      <div className=\"pokedex-stats\">\r\n        <div className=\"stat\">\r\n          <span className=\"stat-number\">{stats.total}</span>\r\n          <span className=\"stat-label\">Total</span>\r\n        </div>\r\n        <div className=\"stat\">\r\n          <span className=\"stat-number\">{stats.unique}</span>\r\n          <span className=\"stat-label\">Unique</span>\r\n        </div>\r\n        <div className=\"stat\">\r\n          <span className=\"stat-number\">{stats.completion}%</span>\r\n          <span className=\"stat-label\">Completion</span>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default PokedexHeader;\r\n","import React from 'react';\r\n\r\nconst PokedexControls = ({ searchQuery, sortBy, onSearch, onSort, onRefresh }) => {\r\n  const handleSearchChange = (e) => {\r\n    onSearch(e.target.value);\r\n  };\r\n\r\n  const handleSortChange = (e) => {\r\n    onSort(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pokedex-controls\">\r\n      <input \r\n        type=\"search\" \r\n        value={searchQuery}\r\n        onChange={handleSearchChange}\r\n        placeholder=\"Search by name or ID...\"\r\n      />\r\n      <select value={sortBy} onChange={handleSortChange}>\r\n        <option value=\"id\">Sort by ID</option>\r\n        <option value=\"name\">Sort by Name</option>\r\n        <option value=\"caughtAt\">Sort by Recent Catch</option>\r\n        <option value=\"firstCaught\">Sort by First Caught</option>\r\n      </select>\r\n      <button onClick={onRefresh} className=\"refresh-btn\">\r\n        üîÑ Refresh\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokedexControls;\r\n","import React from 'react';\r\nimport { Utils } from '../../utils/Utils.js';\r\n\r\nconst PokedexEntry = ({ pokemon, onClick }) => {\r\n  const handleClick = () => {\r\n    if (pokemon.everOwned) {\r\n      onClick();\r\n    }\r\n  };\r\n\r\n  const entryClasses = `pokedex-entry ${pokemon.everOwned ? 'caught' : 'uncaught'}`;\r\n  const spriteStyle = {\r\n    filter: pokemon.everOwned ? 'none' : 'brightness(0)'\r\n  };\r\n\r\n  return (\r\n    <div className={entryClasses} onClick={handleClick}>\r\n      <img \r\n        className=\"pokedex-sprite\" \r\n        src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`}\r\n        alt={pokemon.everOwned ? pokemon.name : 'Unknown Pokemon'}\r\n        style={spriteStyle}\r\n      />\r\n      <div className=\"pokedex-info\">\r\n        <span className=\"pokedex-id\">#{String(pokemon.id).padStart(3, '0')}</span>\r\n        <span className=\"pokedex-name\">\r\n          {pokemon.everOwned ? Utils.capitalizeFirst(pokemon.name) : '???'}\r\n        </span>\r\n        {pokemon.everOwned && (\r\n          <div className=\"pokedex-candy\" style={{ display: 'flex' }}>\r\n            <span className=\"candy-icon\">üç¨</span>\r\n            <span className=\"candy-count\">{pokemon.candyCount || 0}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokedexEntry;\r\n","import React from 'react';\r\nimport PokedexEntry from './PokedexEntry.jsx';\r\n\r\nconst PokedexGrid = ({ pokemonList, onPokemonClick }) => {\r\n  return (\r\n    <div className=\"pokedex-grid\">\r\n      {pokemonList.map((pokemon, index) => (\r\n        <PokedexEntry \r\n          key={`${pokemon.id}-${pokemon.caughtAt}-${index}`}\r\n          pokemon={pokemon}\r\n          onClick={() => onPokemonClick(pokemon)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokedexGrid;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { PokemonService } from '../services/PokemonService.js';\r\nimport PokedexHeader from './components/PokedexHeader.jsx';\r\nimport PokedexControls from './components/PokedexControls.jsx';\r\nimport PokedexGrid from './components/PokedexGrid.jsx';\r\n\r\nconst PokedexApp = () => {\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  const [filteredList, setFilteredList] = useState([]);\r\n  const [stats, setStats] = useState({ total: 0, unique: 0, completion: 0 });\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [sortBy, setSortBy] = useState('id');\r\n  const [loading, setLoading] = useState(true);\r\n  const [service] = useState(() => new PokemonService());\r\n\r\n  useEffect(() => {\r\n    initializePokedex();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Filter and sort whenever search query or sort option changes\r\n    const filtered = service.filterAndSort(searchQuery, sortBy);\r\n    setFilteredList(filtered);\r\n  }, [searchQuery, sortBy, pokemonList, service]);\r\n\r\n  const initializePokedex = async () => {\r\n    try {\r\n      setLoading(true);\r\n      await service.loadPokedex();\r\n      \r\n      // Get initial data\r\n      const initialList = service.filterAndSort('', 'id');\r\n      const initialStats = service.getStats();\r\n      \r\n      setPokemonList(initialList);\r\n      setFilteredList(initialList);\r\n      setStats(initialStats);\r\n    } catch (error) {\r\n      console.error('Error initializing Pokedex:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (query) => {\r\n    setSearchQuery(query);\r\n  };\r\n\r\n  const handleSort = (sortOption) => {\r\n    setSortBy(sortOption);\r\n  };\r\n\r\n  const handlePokemonClick = (pokemon) => {\r\n    if (pokemon.everOwned) {\r\n      const width = 400;\r\n      const height = 600;\r\n      const left = (screen.width / 2) - (width / 2);\r\n      const top = (screen.height / 2) - (height / 2);\r\n      \r\n      if (window.chrome && chrome.windows && chrome.runtime) {\r\n        const url = chrome.runtime.getURL(`dist/src/pokemon-entry/index.html?id=${pokemon.id}`);\r\n        chrome.windows.create({\r\n          url: url,\r\n          type: 'popup',\r\n          width,\r\n          height,\r\n          left,\r\n          top\r\n        });\r\n      } else {\r\n        // Fallback for development or non-extension environment\r\n        window.open(`dist/src/pokemon-entry/index.html?id=${pokemon.id}`, '_blank', \r\n          `width=${width},height=${height},left=${left},top=${top}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  const refreshData = async () => {\r\n    try {\r\n      console.log('üîÑ Pokedex: Refreshing candy and history data...');\r\n      await service.refreshAllData();\r\n      \r\n      // Update the lists and stats\r\n      const newList = service.filterAndSort(searchQuery, sortBy);\r\n      const newStats = service.getStats();\r\n      \r\n      setPokemonList(newList);\r\n      setFilteredList(newList);\r\n      setStats(newStats);\r\n      \r\n      console.log('‚úÖ Pokedex: Data refreshed successfully');\r\n    } catch (error) {\r\n      console.error('‚ùå Pokedex: Error refreshing data:', error);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"pokedex-container\">\r\n        <div style={{ \r\n          display: 'flex', \r\n          justifyContent: 'center', \r\n          alignItems: 'center', \r\n          height: '200px',\r\n          fontSize: '18px'\r\n        }}>\r\n          Loading Pokedex...\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"pokedex-container\">\r\n      <PokedexHeader stats={stats} />\r\n      <PokedexControls \r\n        searchQuery={searchQuery}\r\n        sortBy={sortBy}\r\n        onSearch={handleSearch}\r\n        onSort={handleSort}\r\n        onRefresh={refreshData}\r\n      />\r\n      <PokedexGrid \r\n        pokemonList={filteredList}\r\n        onPokemonClick={handlePokemonClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokedexApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport PokedexApp from './PokedexApp.jsx';\r\n\r\nReactDOM.createRoot(document.getElementById('pokedex-root')).render(\r\n  <React.StrictMode>\r\n    <PokedexApp />\r\n  </React.StrictMode>\r\n);\r\n"],"names":["jsxs","jsx","useState","useEffect","ReactDOM"],"mappings":"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"}